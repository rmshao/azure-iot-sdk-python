# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class DeviceRegistrationState(Model):
    """Device registration state.

    All required parameters must be populated in order to send to Azure.

    :param registration_id: Required. Registration ID.
    :type registration_id: str
    :param created_date_time_utc: Registration create date time (in UTC).
    :type created_date_time_utc: datetime
    :param assigned_hub: Assigned Azure IoT Hub.
    :type assigned_hub: str
    :param device_id: Device ID.
    :type device_id: str
    :param status: Required. Enrollment status. Possible values include:
     'unassigned', 'assigning', 'assigned', 'failed', 'disabled'
    :type status: str or ~serviceswagger.models.enum
    :param error_code: Error code.
    :type error_code: int
    :param error_message: Error message.
    :type error_message: str
    :param last_updated_date_time_utc: Last updated date time (in UTC).
    :type last_updated_date_time_utc: datetime
    :param etag: The entity tag associated with the resource.
    :type etag: str
    """

    _validation = {
        'registration_id': {'required': True},
        'status': {'required': True},
    }

    _attribute_map = {
        'registration_id': {'key': 'registrationId', 'type': 'str'},
        'created_date_time_utc': {'key': 'createdDateTimeUtc', 'type': 'iso-8601'},
        'assigned_hub': {'key': 'assignedHub', 'type': 'str'},
        'device_id': {'key': 'deviceId', 'type': 'str'},
        'status': {'key': 'status', 'type': 'str'},
        'error_code': {'key': 'errorCode', 'type': 'int'},
        'error_message': {'key': 'errorMessage', 'type': 'str'},
        'last_updated_date_time_utc': {'key': 'lastUpdatedDateTimeUtc', 'type': 'iso-8601'},
        'etag': {'key': 'etag', 'type': 'str'},
    }

    def __init__(self, **kwargs):
        super(DeviceRegistrationState, self).__init__(**kwargs)
        self.registration_id = kwargs.get('registration_id', None)
        self.created_date_time_utc = kwargs.get('created_date_time_utc', None)
        self.assigned_hub = kwargs.get('assigned_hub', None)
        self.device_id = kwargs.get('device_id', None)
        self.status = kwargs.get('status', None)
        self.error_code = kwargs.get('error_code', None)
        self.error_message = kwargs.get('error_message', None)
        self.last_updated_date_time_utc = kwargs.get('last_updated_date_time_utc', None)
        self.etag = kwargs.get('etag', None)
